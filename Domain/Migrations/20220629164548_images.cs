using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Domain.Migrations
{
    public partial class images : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Tests",
                keyColumn: "Id",
                keyValue: 13);

            migrationBuilder.DeleteData(
                table: "Tests",
                keyColumn: "Id",
                keyValue: 14);

            migrationBuilder.DropColumn(
                name: "Image",
                table: "PatientScans");

            migrationBuilder.AlterColumn<string>(
                name: "Image",
                table: "Users",
                type: "nvarchar(max)",
                nullable: true,
                oldClrType: typeof(byte[]),
                oldType: "varbinary(max)",
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BloodType",
                table: "Users",
                type: "nvarchar(max)",
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(max)");

            migrationBuilder.CreateTable(
                name: "ScanImages",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Path = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Content = table.Column<byte[]>(type: "varbinary(max)", nullable: false),
                    PatientScanId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ScanImages", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ScanImages_PatientScans_PatientScanId",
                        column: x => x.PatientScanId,
                        principalTable: "PatientScans",
                        principalColumn: "PatientScanId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 29, 18, 45, 44, 996, DateTimeKind.Local).AddTicks(5129), new byte[] { 121, 43, 143, 146, 53, 238, 163, 118, 73, 39, 42, 224, 153, 120, 12, 130, 223, 102, 44, 217, 108, 202, 63, 248, 161, 169, 128, 152, 59, 254, 48, 227, 102, 241, 56, 12, 154, 79, 189, 173, 104, 3, 241, 213, 123, 5, 219, 207, 235, 200, 88, 139, 39, 95, 1, 161, 156, 33, 124, 171, 224, 155, 220, 64 }, new byte[] { 239, 183, 73, 179, 71, 211, 163, 17, 74, 207, 182, 45, 208, 249, 138, 196, 76, 22, 122, 147, 244, 86, 177, 225, 26, 2, 126, 189, 168, 1, 159, 231, 95, 255, 224, 209, 80, 163, 150, 30, 60, 252, 246, 95, 115, 124, 233, 218, 218, 203, 242, 183, 151, 52, 121, 95, 200, 146, 147, 236, 57, 124, 143, 232, 211, 26, 132, 236, 167, 185, 23, 165, 109, 191, 113, 182, 9, 64, 199, 122, 50, 169, 136, 45, 201, 247, 16, 216, 211, 129, 97, 39, 61, 234, 29, 185, 141, 153, 55, 31, 73, 176, 161, 190, 98, 187, 51, 19, 132, 78, 35, 49, 52, 92, 0, 231, 108, 211, 237, 49, 177, 48, 136, 185, 151, 234, 162, 142 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 29, 18, 45, 44, 996, DateTimeKind.Local).AddTicks(5161), new byte[] { 218, 219, 211, 215, 39, 105, 192, 14, 182, 183, 155, 254, 39, 76, 53, 75, 183, 222, 119, 186, 162, 64, 246, 228, 233, 104, 239, 135, 63, 167, 56, 74, 205, 69, 238, 163, 201, 199, 70, 72, 202, 219, 169, 254, 154, 50, 233, 141, 41, 35, 109, 130, 145, 173, 49, 151, 17, 103, 10, 188, 155, 182, 24, 19 }, new byte[] { 147, 83, 22, 242, 69, 211, 230, 97, 246, 105, 63, 235, 66, 210, 121, 163, 159, 117, 24, 11, 74, 34, 195, 25, 32, 197, 157, 24, 125, 138, 188, 122, 182, 2, 172, 95, 208, 129, 17, 26, 155, 95, 102, 65, 194, 149, 179, 116, 35, 83, 140, 130, 119, 56, 21, 18, 3, 196, 253, 1, 67, 112, 174, 253, 30, 184, 205, 74, 69, 102, 34, 207, 83, 187, 147, 67, 53, 178, 53, 139, 147, 130, 88, 35, 251, 201, 130, 32, 200, 69, 144, 208, 102, 206, 39, 214, 150, 49, 63, 170, 104, 178, 184, 171, 48, 133, 139, 112, 246, 95, 51, 165, 210, 149, 93, 49, 88, 150, 16, 132, 162, 119, 193, 140, 133, 210, 82, 106 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 29, 18, 45, 44, 996, DateTimeKind.Local).AddTicks(5170), new byte[] { 104, 48, 79, 108, 70, 87, 234, 217, 164, 1, 66, 63, 241, 111, 112, 57, 250, 71, 145, 192, 243, 25, 137, 167, 203, 197, 245, 237, 131, 130, 75, 208, 223, 242, 89, 103, 97, 247, 226, 7, 148, 115, 188, 248, 87, 229, 212, 162, 255, 232, 123, 221, 113, 206, 161, 102, 34, 56, 43, 23, 214, 150, 77, 254 }, new byte[] { 90, 108, 167, 48, 80, 162, 93, 141, 75, 234, 214, 0, 45, 20, 25, 131, 214, 37, 109, 116, 125, 97, 35, 98, 236, 121, 108, 117, 63, 168, 109, 218, 137, 164, 126, 21, 31, 159, 168, 73, 218, 189, 116, 155, 126, 53, 53, 252, 37, 152, 179, 35, 183, 154, 96, 40, 119, 255, 186, 244, 157, 170, 21, 88, 177, 178, 139, 189, 222, 85, 88, 246, 147, 130, 219, 98, 104, 14, 210, 223, 98, 85, 113, 133, 135, 206, 112, 163, 67, 23, 7, 130, 143, 82, 132, 115, 24, 236, 81, 178, 69, 76, 36, 110, 98, 195, 112, 190, 170, 219, 91, 138, 205, 120, 88, 20, 159, 244, 104, 140, 254, 14, 199, 49, 65, 152, 101, 1 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 29, 18, 45, 44, 996, DateTimeKind.Local).AddTicks(5893), new byte[] { 212, 99, 151, 36, 22, 70, 44, 96, 207, 191, 208, 109, 210, 54, 11, 85, 159, 200, 233, 162, 46, 123, 11, 89, 241, 233, 129, 98, 34, 8, 60, 47, 175, 230, 165, 111, 117, 90, 200, 82, 28, 24, 253, 214, 164, 111, 180, 124, 168, 169, 54, 118, 55, 148, 102, 233, 46, 205, 175, 120, 215, 17, 54, 181 }, new byte[] { 28, 186, 9, 223, 124, 118, 8, 44, 34, 189, 116, 100, 102, 95, 181, 148, 53, 88, 24, 221, 235, 154, 254, 223, 146, 51, 180, 253, 134, 12, 143, 237, 43, 84, 239, 121, 51, 171, 199, 3, 237, 159, 228, 59, 213, 132, 202, 247, 17, 152, 122, 234, 28, 127, 227, 61, 56, 105, 215, 110, 83, 14, 198, 154, 87, 66, 170, 85, 99, 214, 23, 72, 247, 171, 211, 65, 6, 124, 202, 145, 196, 32, 144, 183, 101, 36, 161, 68, 192, 90, 156, 201, 253, 143, 103, 115, 51, 246, 138, 245, 121, 46, 251, 208, 82, 1, 46, 7, 61, 120, 51, 211, 66, 58, 26, 116, 190, 225, 61, 42, 62, 56, 161, 252, 83, 17, 92, 11 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 29, 18, 45, 44, 996, DateTimeKind.Local).AddTicks(5908), new byte[] { 10, 128, 67, 85, 25, 253, 108, 206, 12, 52, 253, 171, 47, 223, 5, 215, 54, 159, 42, 56, 24, 248, 181, 194, 63, 86, 216, 211, 43, 71, 222, 219, 117, 232, 186, 198, 24, 185, 162, 65, 44, 225, 61, 198, 173, 165, 227, 135, 209, 172, 155, 0, 153, 50, 216, 242, 43, 225, 72, 101, 213, 142, 146, 159 }, new byte[] { 163, 235, 89, 47, 11, 146, 15, 235, 182, 115, 221, 128, 19, 101, 32, 202, 53, 2, 154, 234, 215, 7, 255, 133, 121, 91, 90, 82, 140, 116, 49, 118, 79, 124, 44, 209, 240, 128, 231, 236, 56, 203, 210, 255, 116, 239, 12, 82, 98, 139, 45, 250, 126, 15, 30, 66, 191, 139, 125, 101, 224, 215, 196, 207, 9, 41, 253, 247, 32, 12, 85, 84, 82, 243, 105, 48, 240, 32, 7, 203, 47, 114, 212, 7, 35, 202, 81, 217, 126, 43, 216, 145, 45, 172, 5, 37, 66, 96, 16, 23, 66, 59, 150, 160, 135, 253, 100, 239, 104, 222, 79, 207, 203, 222, 127, 84, 21, 166, 39, 111, 140, 49, 24, 48, 33, 241, 54, 139 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 29, 18, 45, 44, 996, DateTimeKind.Local).AddTicks(5915), new byte[] { 33, 52, 10, 190, 176, 39, 129, 155, 49, 100, 192, 126, 193, 139, 106, 121, 163, 255, 219, 23, 220, 93, 215, 93, 188, 154, 187, 117, 192, 105, 191, 64, 0, 15, 33, 244, 66, 199, 161, 155, 237, 124, 228, 92, 203, 181, 50, 49, 237, 129, 121, 241, 183, 137, 156, 93, 53, 252, 225, 213, 249, 3, 220, 9 }, new byte[] { 24, 80, 195, 252, 190, 36, 31, 121, 34, 106, 0, 194, 129, 66, 188, 4, 33, 230, 54, 142, 85, 128, 143, 147, 202, 165, 244, 236, 23, 124, 9, 68, 147, 23, 252, 244, 166, 45, 145, 149, 232, 44, 168, 4, 133, 153, 81, 255, 72, 145, 13, 130, 248, 20, 33, 55, 81, 167, 128, 20, 229, 12, 169, 67, 30, 223, 28, 223, 19, 248, 43, 229, 121, 232, 107, 33, 248, 164, 75, 204, 125, 136, 176, 235, 205, 5, 185, 34, 15, 88, 208, 231, 207, 91, 68, 111, 4, 136, 21, 135, 250, 190, 250, 220, 121, 168, 231, 106, 162, 250, 15, 16, 48, 50, 213, 247, 208, 50, 152, 81, 61, 82, 38, 28, 252, 211, 173, 156 } });

            migrationBuilder.CreateIndex(
                name: "IX_ScanImages_PatientScanId",
                table: "ScanImages",
                column: "PatientScanId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ScanImages");

            migrationBuilder.AlterColumn<byte[]>(
                name: "Image",
                table: "Users",
                type: "varbinary(max)",
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(max)",
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BloodType",
                table: "Users",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(max)",
                oldNullable: true);

            migrationBuilder.AddColumn<byte[]>(
                name: "Image",
                table: "PatientScans",
                type: "varbinary(max)",
                nullable: true);

            migrationBuilder.InsertData(
                table: "Tests",
                columns: new[] { "Id", "Name", "TestCharge" },
                values: new object[,]
                {
                    { 13, "esr", 100f },
                    { 14, "esr", 100f }
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 28, 20, 10, 1, 789, DateTimeKind.Local).AddTicks(4189), new byte[] { 132, 101, 127, 55, 44, 35, 105, 50, 35, 209, 73, 77, 107, 201, 178, 59, 139, 219, 81, 240, 166, 44, 113, 202, 146, 152, 49, 121, 243, 189, 95, 33, 190, 164, 32, 107, 180, 32, 2, 122, 161, 45, 130, 211, 207, 241, 208, 183, 125, 211, 240, 86, 117, 176, 14, 192, 22, 23, 105, 205, 126, 199, 252, 134 }, new byte[] { 0, 179, 72, 75, 92, 240, 249, 128, 57, 235, 13, 152, 225, 53, 132, 142, 70, 218, 52, 224, 203, 215, 249, 4, 130, 99, 166, 122, 134, 211, 231, 198, 144, 84, 88, 69, 190, 69, 123, 77, 236, 217, 178, 63, 194, 181, 97, 181, 181, 254, 106, 60, 59, 230, 142, 66, 19, 86, 209, 255, 123, 230, 177, 137, 137, 143, 36, 123, 130, 114, 18, 127, 221, 85, 186, 134, 4, 159, 27, 90, 42, 107, 142, 208, 16, 242, 91, 115, 182, 173, 95, 26, 210, 84, 16, 225, 44, 18, 40, 214, 25, 215, 228, 217, 214, 45, 179, 88, 128, 171, 200, 37, 206, 227, 237, 36, 163, 95, 95, 179, 58, 120, 180, 217, 52, 228, 200, 135 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 28, 20, 10, 1, 789, DateTimeKind.Local).AddTicks(4204), new byte[] { 169, 121, 248, 33, 222, 29, 39, 65, 10, 203, 106, 139, 74, 195, 210, 116, 241, 120, 191, 239, 14, 206, 211, 183, 101, 241, 19, 226, 136, 124, 8, 220, 16, 30, 162, 90, 43, 10, 48, 4, 39, 105, 85, 56, 165, 58, 162, 198, 161, 177, 71, 120, 190, 173, 117, 142, 63, 201, 206, 178, 153, 150, 197, 29 }, new byte[] { 252, 140, 186, 128, 213, 202, 188, 22, 239, 183, 236, 210, 23, 168, 59, 165, 144, 242, 133, 47, 87, 153, 142, 134, 236, 228, 23, 160, 28, 224, 208, 132, 122, 215, 202, 225, 167, 248, 89, 100, 9, 103, 125, 149, 163, 65, 119, 41, 41, 228, 51, 131, 123, 85, 62, 172, 243, 177, 63, 221, 37, 35, 172, 68, 53, 146, 69, 106, 178, 195, 239, 244, 48, 143, 241, 69, 191, 249, 236, 112, 31, 104, 78, 139, 203, 217, 88, 212, 104, 204, 2, 109, 207, 22, 96, 156, 78, 58, 5, 154, 134, 223, 234, 92, 77, 50, 206, 168, 243, 156, 232, 33, 70, 125, 167, 162, 237, 56, 255, 221, 31, 67, 108, 94, 34, 44, 149, 99 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 28, 20, 10, 1, 789, DateTimeKind.Local).AddTicks(4207), new byte[] { 110, 139, 15, 8, 241, 205, 118, 7, 146, 195, 176, 38, 34, 10, 16, 116, 228, 222, 39, 228, 108, 119, 76, 99, 248, 41, 115, 184, 164, 202, 173, 208, 155, 233, 40, 67, 164, 253, 194, 83, 144, 91, 248, 105, 88, 142, 148, 209, 2, 174, 64, 109, 113, 97, 110, 230, 96, 164, 157, 202, 95, 100, 19, 175 }, new byte[] { 112, 195, 166, 171, 186, 173, 85, 133, 42, 235, 233, 199, 80, 100, 140, 250, 110, 95, 51, 83, 248, 50, 146, 62, 241, 220, 179, 30, 145, 219, 140, 38, 167, 140, 56, 250, 151, 221, 122, 208, 245, 37, 207, 230, 198, 0, 65, 66, 70, 184, 33, 96, 117, 59, 148, 72, 130, 52, 215, 178, 235, 151, 213, 53, 156, 81, 157, 143, 74, 155, 36, 5, 251, 170, 114, 214, 6, 90, 168, 253, 203, 16, 126, 246, 38, 61, 44, 65, 19, 27, 13, 125, 22, 112, 22, 147, 27, 61, 39, 36, 8, 118, 17, 221, 69, 134, 247, 250, 143, 38, 161, 79, 243, 143, 47, 228, 60, 2, 16, 219, 59, 248, 100, 202, 243, 178, 171, 66 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 28, 20, 10, 1, 789, DateTimeKind.Local).AddTicks(4406), new byte[] { 27, 107, 154, 126, 213, 206, 26, 246, 168, 17, 212, 35, 133, 57, 203, 63, 3, 104, 217, 14, 66, 95, 67, 29, 175, 207, 220, 118, 33, 94, 77, 155, 114, 118, 211, 100, 94, 214, 190, 225, 127, 195, 37, 41, 195, 73, 52, 45, 100, 26, 232, 131, 207, 255, 181, 109, 113, 254, 141, 246, 217, 5, 149, 106 }, new byte[] { 220, 240, 153, 127, 86, 164, 59, 207, 203, 88, 83, 33, 220, 101, 149, 179, 137, 137, 209, 152, 139, 194, 127, 10, 78, 109, 14, 81, 225, 149, 91, 15, 207, 31, 120, 13, 242, 100, 253, 222, 211, 227, 115, 145, 208, 212, 85, 211, 145, 194, 9, 193, 54, 251, 150, 144, 202, 171, 110, 188, 200, 179, 156, 59, 25, 161, 32, 166, 150, 206, 162, 162, 215, 101, 246, 1, 34, 54, 241, 154, 224, 133, 102, 106, 51, 120, 129, 217, 214, 197, 247, 30, 83, 81, 73, 185, 107, 151, 209, 172, 137, 50, 16, 42, 98, 28, 159, 124, 241, 135, 159, 60, 174, 19, 51, 252, 201, 16, 203, 228, 50, 192, 143, 129, 251, 159, 67, 45 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 28, 20, 10, 1, 789, DateTimeKind.Local).AddTicks(4410), new byte[] { 150, 121, 221, 196, 132, 61, 167, 66, 252, 206, 222, 252, 3, 62, 94, 253, 119, 248, 169, 191, 56, 180, 7, 249, 133, 190, 118, 242, 186, 62, 235, 14, 178, 145, 106, 193, 1, 50, 94, 91, 39, 195, 113, 69, 121, 233, 64, 134, 5, 41, 231, 79, 81, 179, 197, 213, 101, 198, 201, 129, 218, 200, 100, 141 }, new byte[] { 189, 83, 206, 157, 100, 58, 69, 67, 99, 64, 98, 67, 186, 42, 139, 24, 123, 187, 69, 245, 142, 128, 186, 225, 219, 172, 186, 244, 97, 2, 65, 220, 85, 99, 46, 222, 111, 167, 55, 201, 95, 224, 207, 14, 204, 233, 248, 113, 238, 98, 103, 65, 22, 46, 103, 162, 145, 12, 82, 255, 105, 121, 153, 28, 120, 233, 193, 159, 252, 63, 33, 34, 112, 42, 95, 241, 5, 51, 163, 238, 135, 143, 134, 153, 28, 65, 231, 43, 160, 152, 57, 66, 31, 211, 228, 34, 67, 203, 9, 238, 21, 212, 130, 6, 206, 40, 174, 142, 103, 227, 198, 252, 61, 5, 157, 9, 127, 145, 186, 105, 37, 47, 54, 219, 152, 152, 196, 149 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDtm", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 6, 28, 20, 10, 1, 789, DateTimeKind.Local).AddTicks(4413), new byte[] { 126, 186, 99, 28, 4, 35, 31, 17, 127, 250, 251, 2, 122, 203, 175, 93, 85, 170, 138, 61, 236, 213, 90, 80, 174, 12, 89, 136, 224, 150, 251, 74, 191, 17, 125, 70, 226, 249, 247, 140, 11, 189, 252, 249, 104, 194, 162, 245, 242, 233, 90, 149, 21, 38, 240, 75, 202, 35, 147, 81, 109, 148, 108, 29 }, new byte[] { 33, 9, 167, 206, 124, 45, 76, 172, 62, 230, 197, 228, 86, 11, 128, 94, 110, 81, 2, 173, 249, 151, 4, 166, 231, 13, 244, 11, 224, 5, 212, 2, 239, 241, 170, 249, 230, 154, 97, 29, 59, 18, 2, 70, 190, 38, 162, 129, 137, 152, 6, 75, 148, 247, 37, 6, 212, 181, 225, 143, 73, 77, 79, 244, 208, 245, 10, 35, 206, 65, 49, 169, 207, 69, 18, 208, 9, 65, 1, 188, 52, 167, 51, 211, 10, 20, 222, 241, 164, 160, 147, 94, 91, 85, 151, 219, 68, 24, 141, 91, 62, 227, 96, 129, 109, 218, 18, 206, 124, 239, 32, 166, 228, 152, 152, 173, 199, 68, 132, 15, 253, 224, 226, 49, 146, 239, 204, 65 } });
        }
    }
}
